 AS V1.42 Beta [Bld 223] - Source File hello.asm - Page 1 - 3/20/2023 2:53:12


       1/       0 :                         CPU     6502
       2/       0 :                         
       3/       0 : =$0                  count   equ 0
       4/       0 :                     
       5/    1000 :                         ORG     $1000
       6/    1000 :                         include "LED.asm"
(1)    1/    1000 :                         CPU     6502
(1)    2/    1000 :                         
(1)    3/    1000 :                     ; PIA already defined in uart.asm
(1)    4/    1000 :                     
(1)    5/    1000 : =$4                  LED_RED     EQU     $04
(1)    6/    1000 : =$8                  LED_GREEN   EQU     $08
(1)    7/    1000 : =$2                  LED_BLUE    EQU     $02
(1)    8/    1000 :                     
(1)    9/    1000 :                     ledon   macro   name,bitName,{GLOBALSYMBOLS}
(1)   10/    1000 :                     LED_name_On:
(1)   11/    1000 :                         pha
(1)   12/    1000 :                         lda     PIA_PORTB
(1)   13/    1000 :                         ora     #bitName
(1)   14/    1000 :                         sta     PIA_PORTB
(1)   15/    1000 :                         pla
(1)   16/    1000 :                         rts
(1)   17/    1000 :                         endm
(1)   18/    1000 :                         
(1)   19/    1000 :                     ledoff   macro   name,bitName,{GLOBALSYMBOLS}
(1)   20/    1000 :                     LED_name_Off:
(1)   21/    1000 :                         pha
(1)   22/    1000 :                         lda     PIA_PORTB
(1)   23/    1000 :                         and     #(~bitName) & 255
(1)   24/    1000 :                         sta     PIA_PORTB
(1)   25/    1000 :                         pla
(1)   26/    1000 :                         rts
(1)   27/    1000 :                         endm
(1)   28/    1000 :                     
(1)   29/    1000 :                     ledtoggle   macro   name,bitName,{GLOBALSYMBOLS}
(1)   30/    1000 :                     LED_name_Toggle:
(1)   31/    1000 :                         pha
(1)   32/    1000 :                         lda     PIA_PORTB
(1)   33/    1000 :                         eor     #bitName
(1)   34/    1000 :                         sta     PIA_PORTB
(1)   35/    1000 :                         pla
(1)   36/    1000 :                         rts
(1)   37/    1000 :                         endm
(1)   38/    1000 :                     
(1)   39/    1000 :                     
(1)   40/    1000 :                     LED_init:
(1)   41/    1000 : AD 00 02                lda     PIA_PORTB
(1)   42/    1003 : 29 F1                   and     #(~(LED_RED | LED_GREEN | LED_BLUE)) & 255
(1)   43/    1005 : 8D 00 02                sta     PIA_PORTB
(1)   44/    1008 : AD 02 02                lda     PIA_DDRB
(1)   45/    100B : 09 0E                   ora     #(LED_RED | LED_GREEN | LED_BLUE) & 255
(1)   46/    100D : 8D 02 02                sta     PIA_DDRB
(1)   47/    1010 : 60                      rts
(1)   48/    1011 :                     
(1)   49/    1011 : (MACRO)                  ledon       Red,LED_RED
(1)   49/    1011 :                     LED_RED_On:
(1)   49/    1011 : 48                      pha
(1)   49/    1012 : AD 00 02                lda     PIA_PORTB
(1)   49/    1015 : 09 04                   ora     #LED_RED
(1)   49/    1017 : 8D 00 02                sta     PIA_PORTB
 AS V1.42 Beta [Bld 223] - Source File hello.asm(LED.asm) - Page 2 - 3/20/2023 2:53:12


(1)   49/    101A : 68                      pla
(1)   49/    101B : 60                      rts
(1)   50/    101C : (MACRO)                  ledoff      Red,LED_RED
(1)   50/    101C :                     LED_RED_Off:
(1)   50/    101C : 48                      pha
(1)   50/    101D : AD 00 02                lda     PIA_PORTB
(1)   50/    1020 : 29 FB                   and     #(~LED_RED) & 255
(1)   50/    1022 : 8D 00 02                sta     PIA_PORTB
(1)   50/    1025 : 68                      pla
(1)   50/    1026 : 60                      rts
(1)   51/    1027 : (MACRO)                  ledtoggle   Red,LED_RED
(1)   51/    1027 :                     LED_RED_Toggle:
(1)   51/    1027 : 48                      pha
(1)   51/    1028 : AD 00 02                lda     PIA_PORTB
(1)   51/    102B : 49 04                   eor     #LED_RED
(1)   51/    102D : 8D 00 02                sta     PIA_PORTB
(1)   51/    1030 : 68                      pla
(1)   51/    1031 : 60                      rts
(1)   52/    1032 :                         
(1)   53/    1032 : (MACRO)                  ledon       Green,LED_GREEN
(1)   53/    1032 :                     LED_GREEN_On:
(1)   53/    1032 : 48                      pha
(1)   53/    1033 : AD 00 02                lda     PIA_PORTB
(1)   53/    1036 : 09 08                   ora     #LED_GREEN
(1)   53/    1038 : 8D 00 02                sta     PIA_PORTB
(1)   53/    103B : 68                      pla
(1)   53/    103C : 60                      rts
(1)   54/    103D : (MACRO)                  ledoff      Green,LED_GREEN
(1)   54/    103D :                     LED_GREEN_Off:
(1)   54/    103D : 48                      pha
(1)   54/    103E : AD 00 02                lda     PIA_PORTB
(1)   54/    1041 : 29 F7                   and     #(~LED_GREEN) & 255
(1)   54/    1043 : 8D 00 02                sta     PIA_PORTB
(1)   54/    1046 : 68                      pla
(1)   54/    1047 : 60                      rts
(1)   55/    1048 : (MACRO)                  ledtoggle   Green,LED_GREEN
(1)   55/    1048 :                     LED_GREEN_Toggle:
(1)   55/    1048 : 48                      pha
(1)   55/    1049 : AD 00 02                lda     PIA_PORTB
(1)   55/    104C : 49 08                   eor     #LED_GREEN
(1)   55/    104E : 8D 00 02                sta     PIA_PORTB
(1)   55/    1051 : 68                      pla
(1)   55/    1052 : 60                      rts
(1)   56/    1053 :                     
(1)   57/    1053 : (MACRO)                  ledon       Blue,LED_BLUE
(1)   57/    1053 :                     LED_BLUE_On:
(1)   57/    1053 : 48                      pha
(1)   57/    1054 : AD 00 02                lda     PIA_PORTB
(1)   57/    1057 : 09 02                   ora     #LED_BLUE
(1)   57/    1059 : 8D 00 02                sta     PIA_PORTB
(1)   57/    105C : 68                      pla
(1)   57/    105D : 60                      rts
(1)   58/    105E : (MACRO)                  ledoff      Blue,LED_BLUE
(1)   58/    105E :                     LED_BLUE_Off:
(1)   58/    105E : 48                      pha
(1)   58/    105F : AD 00 02                lda     PIA_PORTB
(1)   58/    1062 : 29 FD                   and     #(~LED_BLUE) & 255
(1)   58/    1064 : 8D 00 02                sta     PIA_PORTB
(1)   58/    1067 : 68                      pla
(1)   58/    1068 : 60                      rts
 AS V1.42 Beta [Bld 223] - Source File hello.asm(LED.asm) - Page 3 - 3/20/2023 2:53:12


(1)   59/    1069 : (MACRO)                  ledtoggle   Blue,LED_BLUE  
(1)   59/    1069 :                     LED_BLUE_Toggle:
(1)   59/    1069 : 48                      pha
(1)   59/    106A : AD 00 02                lda     PIA_PORTB
(1)   59/    106D : 49 02                   eor     #LED_BLUE
(1)   59/    106F : 8D 00 02                sta     PIA_PORTB
(1)   59/    1072 : 68                      pla
(1)   59/    1073 : 60                      rts
(1)   60/    1074 :                     
       7/    1074 :                         include "uart.asm"
(1)    1/    1074 : =>UNDEFINED              IFNDEF  _UART_
(1)    2/    1074 : =$1                  _UART_   SET     1
(1)    3/    1074 :                         CPU     6502
(1)    4/    1074 :                     
(1)    5/    1074 : =$200                PIA_BASE    EQU     $0200
(1)    6/    1074 : =$200                PIA_PORTB   EQU     PIA_BASE + $0
(1)    7/    1074 : =$201                PIA_PORTA   EQU     PIA_BASE + $1
(1)    8/    1074 : =$202                PIA_DDRB    EQU     PIA_BASE + $2
(1)    9/    1074 : =$203                PIA_DDRA    EQU     PIA_BASE + $3
(1)   10/    1074 : =$20B                PIA_ACR     EQU     PIA_BASE + $B
(1)   11/    1074 : =$20C                PIA_PCR     EQU     PIA_BASE + $C
(1)   12/    1074 :                         
(1)   13/    1074 : =$0                  PIA_IN      EQU     $00
(1)   14/    1074 : =$FF                 PIA_OUT     EQU     $FF
(1)   15/    1074 :                     
(1)   16/    1074 : =$1                  FT240_WRMSK EQU     $01     ; WR on bit-0, pulse high to write to the FIFO
(1)   17/    1074 : =$20                 FT240_SIWU  EQU     $20     ; SIWU on bit 5, always high
(1)   18/    1074 : =$E                  FT240_NOSTB EQU     $0E     ; RD# = 1, irqs disabled 
(1)   19/    1074 : =$C                  FT240_RDSTB EQU     $0C     ; RD# = 0, irqs disabled (used to read from the FIFO)
(1)   20/    1074 : =$40                 FT240_TXE   EQU     $40     ; TXE# on bit 6 (FIFO can accept data when low)
(1)   21/    1074 : =$80                 FT240_RXF   EQU     $80     ; RXF# on bit 7 (FIFO has data when low)
(1)   22/    1074 :                     
(1)   23/    1074 :                     ; Initialize the VIA to operate iwth the FT240, which is use for console IO.
(1)   24/    1074 :                     FT240_init:
(1)   25/    1074 : A9 0E                   lda     #FT240_NOSTB    ; RD# = 1
(1)   26/    1076 : 8D 0C 02                sta     PIA_PCR
(1)   27/    1079 : AD 00 02                lda     PIA_PORTB
(1)   28/    107C : 29 FE                   and     #~FT240_WRMSK   ; WR = 0, don't touch the other bits
(1)   29/    107E : 09 20                   ora     #FT240_SIWU     ; SIWU = 1, dont' tough the other bits
(1)   30/    1080 : 8D 00 02                sta     PIA_PORTB
(1)   31/    1083 : A9 00                   lda     #PIA_IN         ; data port input, its only output when writing to FT240
(1)   32/    1085 : 8D 03 02                sta     PIA_DDRA
(1)   33/    1088 : AD 02 02                lda     PIA_DDRB        ; control ports bits for FT240, don't touch other bits
(1)   34/    108B : 09 21                   ora     #(FT240_WRMSK | FT240_SIWU) & $FF   ; Ouptut pins
(1)   35/    108D : 29 3F                   and     #(~(FT240_RXF | FT240_TXE)) & $FF   ; Input pins
(1)   36/    108F : 8D 02 02                sta     PIA_DDRB
(1)   37/    1092 :                     
(1)   38/    1092 :                     FT240_Flush:
(1)   39/    1092 : 2C 00 02                bit     PIA_PORTB       ; Test RXF# (bit-7)
(1)   40/    1095 : 30 0E                   bmi     $$NoChar        ; Branch when RXF# is set, no data in FIFO
(1)   41/    1097 : A9 0C                   lda     #FT240_RDSTB    ; FT240 RD# = 0; strobe next byte from FIFO
(1)   42/    1099 : 8D 0C 02                sta     PIA_PCR
(1)   43/    109C : EA                      nop
(1)   44/    109D : A9 0E                   lda     #FT240_NOSTB    ; FT240 RD# = 1
(1)   45/    109F : 8D 0C 02                sta     PIA_PCR
(1)   46/    10A2 : 4C 92 10                jmp     FT240_Flush
(1)   47/    10A5 :                     $$NoChar:
(1)   48/    10A5 : 60                      rts
(1)   49/    10A6 :                     
(1)   50/    10A6 :                     ; Output the value in the acc to the console    
 AS V1.42 Beta [Bld 223] - Source File hello.asm(uart.asm) - Page 4 - 3/20/2023 2:53:12


(1)   51/    10A6 :                     PutChar:
(1)   52/    10A6 : 2C 00 02                bit     PIA_PORTB       ; Test TXE (bit-6)
(1)   53/    10A9 : 70 FB                   bvs     PutChar         ; When set the FIFO is full, keep polling until there is room
(1)   54/    10AB : 8D 01 02                sta     PIA_PORTA       ; Write data to port
(1)   55/    10AE : A9 FF                   lda     #PIA_OUT        ; Set data port direction to output
(1)   56/    10B0 : 8D 03 02                sta     PIA_DDRA
(1)   57/    10B3 : AD 00 02                lda     PIA_PORTB       ; FT240 WR = 1 (don't touch other bits)
(1)   58/    10B6 : 09 01                   ora     #FT240_WRMSK
(1)   59/    10B8 : 8D 00 02                sta     PIA_PORTB
(1)   60/    10BB : 29 FE                   and     #~FT240_WRMSK   ; FT240 WR = 0
(1)   61/    10BD : 8D 00 02                sta     PIA_PORTB
(1)   62/    10C0 : A9 00                   lda     #PIA_IN         ; Set data port direction to input
(1)   63/    10C2 : 8D 03 02                sta     PIA_DDRA
(1)   64/    10C5 : 60                      rts
(1)   65/    10C6 :                     
(1)   66/    10C6 :                        ; print null terminated string at (x)
(1)   67/    10C6 :                     putStr:
(1)   68/    10C6 : A0 00                   ldy     #0
(1)   69/    10C8 :                     $$loop:
(1)   70/    10C8 : B1 04                   lda     (strPtrL),y  ; get the character
(1)   71/    10CA : F0 06                   beq     $$exit      ; is it $00? yes, done
(1)   72/    10CC : 20 A6 10                jsr     PutChar     ; no, send it
(1)   73/    10CF : C8                      iny                 ; increment pointer
(1)   74/    10D0 : D0 F6                   bne     $$loop      ; output next character
(1)   75/    10D2 :                     $$exit:
(1)   76/    10D2 : 60                      rts
(1)   77/    10D3 :                     
(1)   78/    10D3 :                     
(1)   79/    10D3 :                     ; Read a character from the console in the acc, C == 1 indicates a character was read
(1)   80/    10D3 :                     GetCharNB:
(1)   81/    10D3 : 2C 00 02                bit     PIA_PORTB       ; Test RXF# (bit-7)
(1)   82/    10D6 : 30 0F                   bmi     $$NoChar          ; Branch when RXF# is set, no data in FIFO
(1)   83/    10D8 : A2 0C                   ldx     #FT240_RDSTB    ; FT240 RD# = 0; strobe next byte from FIFO
(1)   84/    10DA : 8E 0C 02                stx     PIA_PCR
(1)   85/    10DD : AD 01 02                lda     PIA_PORTA       ; Read data byte from FT240 (assumes DDR in input)
(1)   86/    10E0 : A2 0E                   ldx     #FT240_NOSTB    ; FT240 RD# = 1
(1)   87/    10E2 : 8E 0C 02                stx     PIA_PCR
(1)   88/    10E5 : 38                      sec                     ; Set carry to indicate we read a data byte
(1)   89/    10E6 : 60                      rts
(1)   90/    10E7 :                     $$NoChar:
(1)   91/    10E7 : 18                      clc                     ; Clear carry to indicate there was nothing to read
(1)   92/    10E8 : 60                      rts
(1)   93/    10E9 :                         
(1)   94/    10E9 :                         ; Blocking read a character from the console
(1)   95/    10E9 :                     GetChar:
(1)   96/    10E9 : 20 D3 10                jsr     GetCharNB       ; Is a charcter available
(1)   97/    10EC : 90 FB                   bcc     GetChar         ; Got a char? Keep polling until we get a char
(1)   98/    10EE : 60                      rts
(1)   99/    10EF :                     
(1)  100/    10EF : [1]                      ENDIF
       8/    10EF :                     
       9/    10EF : =$4                  strPtrL     EQU     $04
      10/    10EF : =$5                  strPtrH     EQU     $05
      11/    10EF :                     
      12/    10EF :                     hi  function x,(x>>8)&255
      13/    10EF :                     lo  function x,x&255
      14/    10EF :                     
      15/    10EF :                     main:
      16/    10EF : 20 74 10                jsr     FT240_init
      17/    10F2 : 20 00 10                jsr     LED_init
 AS V1.42 Beta [Bld 223] - Source File hello.asm - Page 5 - 3/20/2023 2:53:12


      18/    10F5 : A9 F0                   lda     #$F0
      19/    10F7 : 85 00                   sta     count
      20/    10F9 :                     loop:
      21/    10F9 : 20 48 10                jsr     LED_GREEN_TOGGLE
      22/    10FC : A9 0C                   lda     #lo(HelloMsg)
      23/    10FE : 85 04                   sta     strPtrL
      24/    1100 : A9 11                   lda     #hi(HelloMsg)
      25/    1102 : A5 05                   lda     strPtrH
      26/    1104 : 20 C6 10                jsr     putStr
      27/    1107 : E6 00                   inc     count
      28/    1109 : D0 EE                   bne     loop
      29/    110B : 60                      rts
      30/    110C :                         
      31/    110C :                     HelloMsg:
      32/    110C : 48 65 6C 6C 6F 20        FCB     "Hello chat!",10,0
             1112 : 63 68 61 74 21 0A 
             1118 : 00                
      33/    1119 :                          
 AS V1.42 Beta [Bld 223] - Source File hello.asm - Page 6 - 3/20/2023 2:53:12


  Symbol Table (* = unused):
  --------------------------

*ARCHITECTURE :                                        "i386-unknown-win32" - |
*CASESENSITIVE :                  0 - | *COMPMODE :                       0 - |
*CONSTPI :        3.141592653589793 - |  COUNT :                          0 - |
*DATE :                 "3/20/2023" - |  EXIT40 :                      10D2 C |
*FALSE :                          0 - |  FT240_FLUSH :                 1092 C |
 FT240_INIT :                  1074 C |  FT240_NOSTB :                    E - |
 FT240_RDSTB :                    C - |  FT240_RXF :                     80 - |
 FT240_SIWU :                    20 - |  FT240_TXE :                     40 - |
 FT240_WRMSK :                    1 - | *FULLPMMU :                       1 - |
 GETCHAR :                     10E9 C |  GETCHARNB :                   10D3 C |
*HAS64 :                          0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HELLOMSG :                    110C C |
*INSUPMODE :                      0 - |  LED_BLUE :                       2 - |
*LED_BLUE_OFF :                105E C | *LED_BLUE_ON :                 1053 C |
*LED_BLUE_TOGGLE :             1069 C |  LED_GREEN :                      8 - |
*LED_GREEN_OFF :               103D C | *LED_GREEN_ON :                1032 C |
 LED_GREEN_TOGGLE :            1048 C |  LED_INIT :                    1000 C |
 LED_RED :                        4 - | *LED_RED_OFF :                 101C C |
*LED_RED_ON :                  1011 C | *LED_RED_TOGGLE :              1027 C |
*LISTON :                         1 - |  LOOP :                        10F9 C |
 LOOP40 :                      10C8 C | *MACEXP :                         7 - |
*MAIN :                        10EF C | *MOMCPU :                      6502 - |
*MOMCPUNAME :                "6502" - | *NESTMAX :                      100 - |
 NOCHAR38 :                    10A5 C |  NOCHAR41 :                    10E7 C |
*PADDING :                        1 - | *PIA_ACR :                      20B - |
 PIA_BASE :                     200 - |  PIA_DDRA :                     203 - |
 PIA_DDRB :                     202 - |  PIA_IN :                         0 - |
 PIA_OUT :                       FF - |  PIA_PCR :                      20C - |
 PIA_PORTA :                    201 - |  PIA_PORTB :                    200 - |
 PUTCHAR :                     10A6 C |  PUTSTR :                      10C6 C |
*RELAXED :                        1 - |  STRPTRH :                        5 - |
 STRPTRL :                        4 - | *TIME :                   "2:53:12" - |
*TRUE :                           1 - | *VERSION :                     142F - |
*_UART_ :                         1 - |

     66 symbols
     32 unused symbols

 AS V1.42 Beta [Bld 223] - Source File hello.asm - Page 7 - 3/20/2023 2:53:12


  Defined Macros:
  ---------------

LEDOFF                                | LEDON                                
LEDTOGGLE                             |

      3 macros

 AS V1.42 Beta [Bld 223] - Source File hello.asm - Page 8 - 3/20/2023 2:53:12


  Defined Functions:
  ------------------

LO                                    | HI                                   

 AS V1.42 Beta [Bld 223] - Source File hello.asm - Page 9 - 3/20/2023 2:53:12


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page
 AS V1.42 Beta [Bld 223] - Source File hello.asm - Page 10 - 3/20/2023 2:53:12



  Cross Reference List:
  ---------------------

symbol COUNT (=0, hello.asm:3):
 file hello.asm :
     19       27    

symbol EXIT40 (=10D2, Y:\software\6502\hello\../common\uart.asm:75):
 file Y:\software\6502\hello\../common\uart.asm :
     71    

symbol FT240_FLUSH (=1092, Y:\software\6502\hello\../common\uart.asm:38):
 file Y:\software\6502\hello\../common\uart.asm :
     46    

symbol FT240_INIT (=1074, Y:\software\6502\hello\../common\uart.asm:24):
 file hello.asm :
     16    

symbol FT240_NOSTB (=E, Y:\software\6502\hello\../common\uart.asm:18):
 file Y:\software\6502\hello\../common\uart.asm :
     25       44       86    

symbol FT240_RDSTB (=C, Y:\software\6502\hello\../common\uart.asm:19):
 file Y:\software\6502\hello\../common\uart.asm :
     41       83    

symbol FT240_RXF (=80, Y:\software\6502\hello\../common\uart.asm:21):
 file Y:\software\6502\hello\../common\uart.asm :
     35    

symbol FT240_SIWU (=20, Y:\software\6502\hello\../common\uart.asm:17):
 file Y:\software\6502\hello\../common\uart.asm :
     29       34    

symbol FT240_TXE (=40, Y:\software\6502\hello\../common\uart.asm:20):
 file Y:\software\6502\hello\../common\uart.asm :
     35    

symbol FT240_WRMSK (=1, Y:\software\6502\hello\../common\uart.asm:16):
 file Y:\software\6502\hello\../common\uart.asm :
     28       34       58       60    

symbol GETCHAR (=10E9, Y:\software\6502\hello\../common\uart.asm:95):
 file Y:\software\6502\hello\../common\uart.asm :
     97    

symbol GETCHARNB (=10D3, Y:\software\6502\hello\../common\uart.asm:80):
 file Y:\software\6502\hello\../common\uart.asm :
     96    

symbol HELLOMSG (=110C, hello.asm:31):
 file hello.asm :
     22       24    

symbol LED_BLUE (=2, Y:\software\6502\hello\../common\LED.asm:7):
 file Y:\software\6502\hello\../common\LED.asm :
     42       45       57       58       59    

 AS V1.42 Beta [Bld 223] - Source File hello.asm - Page 11 - 3/20/2023 2:53:12


symbol LED_GREEN (=8, Y:\software\6502\hello\../common\LED.asm:6):
 file Y:\software\6502\hello\../common\LED.asm :
     42       45       53       54       55    

symbol LED_GREEN_TOGGLE (=1048, Y:\software\6502\hello\../common\LED.asm:55):
 file hello.asm :
     21    

symbol LED_INIT (=1000, Y:\software\6502\hello\../common\LED.asm:40):
 file hello.asm :
     17    

symbol LED_RED (=4, Y:\software\6502\hello\../common\LED.asm:5):
 file Y:\software\6502\hello\../common\LED.asm :
     42       45       49       50       51    

symbol LOOP (=10F9, hello.asm:20):
 file hello.asm :
     28    

symbol LOOP40 (=10C8, Y:\software\6502\hello\../common\uart.asm:69):
 file Y:\software\6502\hello\../common\uart.asm :
     74    

symbol NOCHAR38 (=10A5, Y:\software\6502\hello\../common\uart.asm:47):
 file Y:\software\6502\hello\../common\uart.asm :
     40    

symbol NOCHAR41 (=10E7, Y:\software\6502\hello\../common\uart.asm:90):
 file Y:\software\6502\hello\../common\uart.asm :
     82    

symbol PIA_BASE (=200, Y:\software\6502\hello\../common\uart.asm:5):
 file Y:\software\6502\hello\../common\uart.asm :
      6        7        8        9       10       11    

symbol PIA_DDRA (=203, Y:\software\6502\hello\../common\uart.asm:9):
 file Y:\software\6502\hello\../common\uart.asm :
     32       56       63    

symbol PIA_DDRB (=202, Y:\software\6502\hello\../common\uart.asm:8):
 file Y:\software\6502\hello\../common\LED.asm :
     44       46    
 file Y:\software\6502\hello\../common\uart.asm :
     33       36    

symbol PIA_IN (=0, Y:\software\6502\hello\../common\uart.asm:13):
 file Y:\software\6502\hello\../common\uart.asm :
     31       62    

symbol PIA_OUT (=FF, Y:\software\6502\hello\../common\uart.asm:14):
 file Y:\software\6502\hello\../common\uart.asm :
     55    

symbol PIA_PCR (=20C, Y:\software\6502\hello\../common\uart.asm:11):
 file Y:\software\6502\hello\../common\uart.asm :
     26       42       45       84       87    

symbol PIA_PORTA (=201, Y:\software\6502\hello\../common\uart.asm:7):
 file Y:\software\6502\hello\../common\uart.asm :
 AS V1.42 Beta [Bld 223] - Source File hello.asm - Page 12 - 3/20/2023 2:53:12


     54       85    

symbol PIA_PORTB (=200, Y:\software\6502\hello\../common\uart.asm:6):
 file Y:\software\6502\hello\../common\LED.asm :
     41       43       49( 2)   50( 2)   51( 2)   53( 2)   54( 2)   55( 2)
     57( 2)   58( 2)   59( 2)
 file Y:\software\6502\hello\../common\uart.asm :
     27       30       39       52       57       59       61       81    

symbol PUTCHAR (=10A6, Y:\software\6502\hello\../common\uart.asm:51):
 file Y:\software\6502\hello\../common\uart.asm :
     53       72    

symbol PUTSTR (=10C6, Y:\software\6502\hello\../common\uart.asm:67):
 file hello.asm :
     26    

symbol STRPTRH (=5, hello.asm:10):
 file hello.asm :
     25    

symbol STRPTRL (=4, hello.asm:9):
 file hello.asm :
     23    
 file Y:\software\6502\hello\../common\uart.asm :
     70    

symbol _UART_ (=1, Y:\software\6502\hello\../common\uart.asm:2):
 file Y:\software\6502\hello\../common\uart.asm :
      1    



0.01 seconds assembly time

    193 lines source file
    256 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
